<?php

namespace App\Http\Controllers\Api;

use App\Models\{$_singular};
use Illuminate\Http\Request;
use App\Http\Requests\{$_singular}\Index{$_plural};
use App\Http\Requests\{$_singular}\Store{$_singular};
use App\Http\Requests\{$_singular}\Show{$_singular};
use App\Http\Requests\{$_singular}\Update{$_singular};
use App\Http\Requests\{$_singular}\Destroy{$_singular};
use App\Http\Controllers\Api\ApiController;
use App\Transformers\{$_singular}Transformer;

class {$_singular}Controller extends ApiController
{
    /**
     * @var App\Transformers\{$_singular}Transformer
     */
    protected $transformer;

    public function __construct({$_singular}Transformer $transformer)
    {
        $this->transformer = $transformer;
    }

    /**
     * Display a listing of the resource.
     *
     * @param  \App\Http\Requests\{$_singular}\Index{$_plural}  $request
     * @return \Illuminate\Http\Response
     */
    public function index(Index{$_plural} $request)
    {
        ${$_plural_lcfirst} = {$_singular}::filter($request->filter)
            ->visibleBy($request->user())
            ->with($request->getInclude())
            ->sort($request->getSort())
            ->paginate(
                $request->getPageSize()
            );

        return fractal(${$_plural_lcfirst}, $this->transformer)
            ->parseIncludes($request->get('include'))
            ->respond();
    }

    /**
     * Store a newly created resource.
     *
     * @param  \App\Http\Requests\{$_singular}\Store{$_singular}  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Store{$_singular} $request)
    {
        ${$_lcfirst} = {$_singular}::make($request->all());
        ${$_lcfirst}->save();

        return fractal(${$_lcfirst}, $this->transformer)
            ->parseIncludes($request->get('include'))
            ->respond();
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Http\Requests\{$_singular}\Show{$_singular}  $request
     * @param  \App\Models\{$_singular}   ${$_lcfirst}
     * @return \Illuminate\Http\Response
     */
    public function show(Show{$_singular} $request, {$_singular} ${$_lcfirst})
    {
        return fractal(${$_lcfirst}, $this->transformer)
            ->parseIncludes($request->get('include'))
            ->respond();
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\{$_singular}\Update{$_singular}  $request
     * @param  \App\Models\{$_singular}   ${$_lcfirst}
     * @return \Illuminate\Http\Response
     */
    public function update(Update{$_singular} $request, {$_singular} ${$_lcfirst})
    {
        ${$_lcfirst}->fill($request->all())
            ->save();

        return fractal(${$_lcfirst}, $this->transformer)
                ->parseIncludes($request->get('include'))
                ->respond();
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Http\Requests\{$_singular}\Destroy{$_singular}  $request
     * @param  \App\Models\{$_singular}   ${$_lcfirst}
     * @return \Illuminate\Http\Response
     */
    public function destroy(Destroy{$_singular} $request, {$_singular} ${$_lcfirst})
    {
        if (${$_lcfirst}->delete()) {
            return $this->respondSuccess();
        }
    }
}
